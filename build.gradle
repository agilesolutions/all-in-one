import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.agilesolutions.practises'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }

}

ext {
    commit = commit()
    branchName = branchName()
    set('springAiVersion', "1.0.0-M6")
    set('springCloudVersion', "2023.0.1")
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.1"
        mavenBom("com.azure.spring:spring-cloud-azure-dependencies:5.9.0")
        mavenBom('org.springframework.boot:spring-boot-dependencies:3.4.5') {
            bomProperties([
                    'spring-framework.version': '6.2.7'
            ])
        }
    }
}


dependencies {
    // Bill of Materials
    implementation platform("org.springframework.ai:spring-ai-bom:1.0.0-M7")

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.1'
    implementation 'org.slf4j:slf4j-api:2.0.13'
    implementation 'org.projectlombok:lombok:1.18.34'
    implementation 'com.googlecode.guava-osgi:guava-osgi:11.0.1'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.h2database:h2:1.4.200'
    implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring30x:4.5.2'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    runtimeOnly 'org.springframework.boot:spring-boot-starter-aop'
    // tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:testcontainers:1.20.1'
    testImplementation 'org.testcontainers:junit-jupiter:1.20.1'
    testImplementation 'org.testcontainers:postgresql:1.20.0'
    testImplementation 'org.testcontainers:mongodb:1.20.2'
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

test {
    useJUnitPlatform()
}

String commit() {
    return 'git rev-parse HEAD'.execute().text.trim()
}

String branchName() {
    return hasProperty('branch.name') ? property('branch.name') : 'git branch --show-current'.execute().text.trim()
}


bootJar {

    archiveFileName = './application.jar'

    manifest{
        attributes(
                'Built-by'          : System.properties['user.name'],
                'Build-Timestamp'   : java.time.Instant.now(),
                'Build-Revision'    : commit,
                'Build-Branch'      : branchName,
                'Created-by'        : "Gradle ${gradle.gradleVersion}",
                'Build-JDK'         : "${System.properties['java.version']} ${System.properties['java.vendor']} ${System.properties['java.vm.version']}",
                'Build-OS'          : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )

    }

}
